/*Create a Class Employee with the following specifications
Properties
----------
string Name -> no blank names should be allowed
int EmpNo ->  must be readonly and autogenerated
decimal Basic -> must be between some range
short DeptNo -> must be > 0

Methods
-------
decimal GetNetSalary() -> returns calculated net salary (Use any formula to get net salary based on Basic salary)


Create constructors to accept initial values for Employee obj
Employee o1 = new Employee("Amol",123465, 10);
Employee o2 = new Employee("Amol",123465);
Employee o3 = new Employee("Amol");
Employee o4 = new Employee();

EmpNo must be autogenerated ... i.e.
first object should automatically get EmpNo 1
second object should automatically get EmpNo 2
third object should automatically get EmpNo 3
...and so on...

Test Cases
Employee o1 = new Employee()
Employee o2 = new Employee()
Employee o3 = new Employee()
cw(o1.EmpNo)
cw(o2.EmpNo)
cw(o3.EmpNo)

cw(o3.EmpNo)
cw(o2.EmpNo)
cw(o1.EmpNo)
*/

namespace Assignment1
{
    internal class Program
    {
        static void Main()
        {
            Employee obj1 = new Employee();
            obj1.Display();
            Employee obj2 = new Employee();
            obj2.Display();
            Employee obj3 = new Employee();
            obj3.Display();

            Employee o1 = new Employee("Amol", 123465, 10);
            o1.Display(); 
            Employee o2 = new Employee("Amol", 123465);
            o2.Display();
            Employee o3 = new Employee("Amol");
            o3.Display();
            Employee o4 = new Employee();
            o4.Display();

            Console.WriteLine("\n" + obj1.EmployeeNo);
            Console.WriteLine(obj2.EmployeeNo);
            Console.WriteLine(obj3.EmployeeNo);


            Console.WriteLine("\n");
            Console.WriteLine(obj3.EmployeeNo);
            Console.WriteLine(obj2.EmployeeNo);
            Console.WriteLine(obj1.EmployeeNo);


        }
    }

    public class Employee
    {
        private string name;
        private int employeeNo;
        private decimal basic;
        private short deptNo;
        private static int id_counter = 0;

        public string Name
        {
            get
            {
                return this.name;
            }

            set
            {
                if (value != "" && value != null) // can also use !string.IsNullorWhiteSpace(value) for this validation
                {
                    name = value;
                }
                else
                {
                    Console.WriteLine("\nEmployee Name shouldn't be null");
                }
            }
        }

        public int EmployeeNo
        {
            get
            {
                return this.employeeNo;
            }
        }

        private void AutoIncrement()
        {
            this.employeeNo = ++id_counter;
        }

        public decimal Basic
        {
            get
            {
                return this.basic;
            }
            set
            {
                if (value > 8000 && value <= 1000000)
                    basic = value;
                else
                    Console.WriteLine("\nBasic Salary must be between 8000 and 1000000");
            }
        }
        public short DeptNo
        {
            get
            {
                return this.deptNo;
            }

            set
            {
                if (value > 0)
                {
                    deptNo = value;
                }
                else
                {
                    Console.WriteLine("\nDepartment Number should be more than 0");
                }
            }
        }

        public Employee(string name = "", decimal basic = 0.00M, short deptNo = -1)
        {
            AutoIncrement();
            this.Name = name;
            this.Basic = basic;
            this.DeptNo = deptNo;
        }

        public decimal GetNetSalary()
        {
            decimal netSal = 1;
            if (this.basic <= 10000)
            {
                netSal = this.basic + (this.basic * 0.05M);
            }
            else if (this.basic > 10000 && this.basic <= 20000)
            {
                netSal = this.basic + (this.basic * 0.10M);
            }
            else if (this.basic > 20000)
            {
                netSal = this.basic + (this.basic * 0.15M);
            }
            return netSal;
        }

        public void Display()
        {
            Console.WriteLine("\nEmployee Name: " + this.name);
            Console.WriteLine("Employee Id: " + this.employeeNo);
            Console.WriteLine("Basic Salary: " + this.basic);
            Console.WriteLine("Department Number: " + this.deptNo);
            Console.WriteLine("Gross Salary: " + GetNetSalary());
        }
    }
}